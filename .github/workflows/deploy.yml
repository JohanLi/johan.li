name: 'Deploy'
on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'prod'
      setup:
        description: 'Run setup'
        required: true
        type: boolean

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v2'
        with:
          lfs: true

      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      # Next.js build is not cached on purpose â€“ there seems to be an issue with new Tailwind classes not being added
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Create robots.txt for dev
        run: 'echo -e "User-agent: *\nDisallow: /" > public/robots.txt'
        if: ${{ github.event.inputs.environment != 'prod' }}

      - name: Build
        run: npm run build

      - name: Add deploy key
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Checkout uncharted-waters-2
        uses: actions/checkout@v2
        with:
          repository: JohanLi/uncharted-waters-2
          path: uncharted-waters-2
          lfs: true

      - name: Build uncharted-waters-2
        run: |
          cd uncharted-waters-2
          npm ci
          npm run build

      - name: Checkout fingerprint-scanner-simulator
        uses: actions/checkout@v2
        with:
          repository: JohanLi/fingerprint-scanner-simulator
          path: fingerprint-scanner-simulator
          lfs: true

      - name: Build fingerprint-scanner-simulator
        run: |
          cd fingerprint-scanner-simulator
          npm ci
          npm run build

      - name: Create .env for dev
        run: echo "${{ secrets.ENV_DEV }}" > .env
        if: ${{ github.event.inputs.environment != 'prod' }}

      - name: Create .env for prod
        run: echo "${{ secrets.ENV_PROD }}" > .env
        if: ${{ github.event.inputs.environment == 'prod' }}

      - name: Deploy
        run: |
          set -o allexport
          source .env
          set +o allexport
          cd .ansible
          ansible-playbook -i ${IP_ADDRESS}, site.yml
        if: ${{ github.event.inputs.setup == 'false' }} # https://github.com/actions/runner/issues/1483

      - name: Setup and deploy
        run: |
          set -o allexport
          source .env
          set +o allexport
          cd .ansible
          ansible-playbook -i ${IP_ADDRESS}, site.yml --extra-vars "setup=true"
        if: ${{ github.event.inputs.setup == 'true' }}
