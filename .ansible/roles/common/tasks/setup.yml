- name: create group
  group:
    name: "{{ USER }}"
    state: present

- name: create user
  user:
    name: "{{ USER }}"
    group: "{{ USER }}"

# https://github.com/nodesource/distributions
- name: add NodeSource package signing key
  apt_key:
    url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key

- name: add NodeSource repository
  apt_repository:
    repo: "{{ item }}"
    state: present
    filename: nodesource
  loop:
    - deb https://deb.nodesource.com/node_15.x focal main
    - deb-src https://deb.nodesource.com/node_15.x focal main

# https://nginx.org/en/linux_packages.html
- name: add nginx package signing key
  apt_key:
    url: https://nginx.org/keys/nginx_signing.key

- name: add nginx repository
  apt_repository:
    repo: "{{ item }}"
    state: present
    filename: nginx
  loop:
    - deb https://nginx.org/packages/mainline/ubuntu/ focal nginx
    - deb-src https://nginx.org/packages/mainline/ubuntu/ focal nginx

- name: install nodejs, nginx, certbot
  apt:
    name: "{{ packages }}"
    state: latest
    update_cache: yes
    force_apt_get: yes
  vars:
    packages:
      - nodejs
      - nginx
      - certbot

- name: setup let's encrypt certificate
  command: |
    certbot certonly --standalone --noninteractive --agree-tos --email {{ EMAIL }} -d {{ DOMAIN }}
    --pre-hook "service nginx stop" --post-hook "service nginx start"
  args:
    creates: /etc/letsencrypt/live/{{ DOMAIN }}/privkey.pem
  register: certificate

- name: verify that renewal works
  command: certbot renew --dry-run
  when: certificate.changed

- name: delete default server block
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent
  notify:
    - restart nginx

- name: add server block
  template:
    src: ./server-block.conf
    dest: /etc/nginx/conf.d/{{ DOMAIN }}.conf
  notify:
    - restart nginx

- name: create service
  template:
    src: ./systemd.service
    dest: /etc/systemd/system/{{ DOMAIN }}.service
  notify:
    - restart service
